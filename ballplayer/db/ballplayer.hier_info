|ballplayer_top
clk => clk.IN4
rst_n => rst_n.IN5
adc_cs <= adc081s101_driver:adc_driver_inst.adc_cs
adc_clk <= adc081s101_driver:adc_driver_inst.adc_clk
adc_dat => adc_dat.IN1
key_up => key_up.IN1
key_down => key_down.IN1
ball_release_button => ball_release_button.IN1
i2c_scl <= rpr0521rs_driver:sensor_inst.scl
i2c_sda <> rpr0521rs_driver:sensor_inst.sda
lcd_rst <= lcd_full_init_test:lcd_test_inst.lcd_rst
lcd_blk <= lcd_full_init_test:lcd_test_inst.lcd_blk
lcd_dc <= lcd_full_init_test:lcd_test_inst.lcd_dc
lcd_sclk <= lcd_full_init_test:lcd_test_inst.lcd_sclk
lcd_mosi <= lcd_full_init_test:lcd_test_inst.lcd_mosi
lcd_cs <= lcd_full_init_test:lcd_test_inst.lcd_cs
seg_led_1[0] <= adjuster:adj_inst.seg_led_1
seg_led_1[1] <= adjuster:adj_inst.seg_led_1
seg_led_1[2] <= adjuster:adj_inst.seg_led_1
seg_led_1[3] <= adjuster:adj_inst.seg_led_1
seg_led_1[4] <= adjuster:adj_inst.seg_led_1
seg_led_1[5] <= adjuster:adj_inst.seg_led_1
seg_led_1[6] <= adjuster:adj_inst.seg_led_1
seg_led_1[7] <= adjuster:adj_inst.seg_led_1
seg_led_1[8] <= adjuster:adj_inst.seg_led_1
seg_led_2[0] <= adjuster:adj_inst.seg_led_2
seg_led_2[1] <= adjuster:adj_inst.seg_led_2
seg_led_2[2] <= adjuster:adj_inst.seg_led_2
seg_led_2[3] <= adjuster:adj_inst.seg_led_2
seg_led_2[4] <= adjuster:adj_inst.seg_led_2
seg_led_2[5] <= adjuster:adj_inst.seg_led_2
seg_led_2[6] <= adjuster:adj_inst.seg_led_2
seg_led_2[7] <= adjuster:adj_inst.seg_led_2
seg_led_2[8] <= adjuster:adj_inst.seg_led_2
led[0] <= lcd_full_init_test:lcd_test_inst.led1
led[1] <= lcd_full_init_test:lcd_test_inst.led2
led[2] <= dat_valid.DB_MAX_OUTPUT_PORT_TYPE
led[3] <= LessThan0.DB_MAX_OUTPUT_PORT_TYPE
led[4] <= adc081s101_driver:adc_driver_inst.adc_done
led[5] <= jumping:jump_inst.over_flag
led[6] <= jumping:jump_inst.stop_flag
led[7] <= <GND>


|ballplayer_top|ballplayer_pll:pll_inst
inclk0 => sub_wire1[0].IN1
c0 <= altpll:altpll_component.clk
c1 <= altpll:altpll_component.clk
locked <= altpll:altpll_component.locked


|ballplayer_top|ballplayer_pll:pll_inst|altpll:altpll_component
inclk[0] => ballplayer_pll_altpll:auto_generated.inclk[0]
inclk[1] => ballplayer_pll_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ~NO_FANOUT~
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= ballplayer_pll_altpll:auto_generated.locked
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|ballplayer_top|ballplayer_pll:pll_inst|altpll:altpll_component|ballplayer_pll_altpll:auto_generated
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1
locked <= pll1.LOCKED


|ballplayer_top|adc081s101_driver:adc_driver_inst
clk => clk_count[0].CLK
clk => clk_count[1].CLK
clk => clk_count[2].CLK
clk => clk_count[3].CLK
clk => clk_count[4].CLK
clk => clk_count[5].CLK
clk => clk_count[6].CLK
clk => clk_count[7].CLK
clk => clk_count[8].CLK
clk => clk_count[9].CLK
clk => clk_count[10].CLK
clk => clk_count[11].CLK
clk => clk_count[12].CLK
clk => clk_count[13].CLK
clk => clk_count[14].CLK
clk => clk_count[15].CLK
clk => data_temp[0].CLK
clk => data_temp[1].CLK
clk => data_temp[2].CLK
clk => data_temp[3].CLK
clk => data_temp[4].CLK
clk => data_temp[5].CLK
clk => data_temp[6].CLK
clk => data_temp[7].CLK
clk => bit_count[0].CLK
clk => bit_count[1].CLK
clk => bit_count[2].CLK
clk => bit_count[3].CLK
clk => bit_count[4].CLK
clk => bit_count[5].CLK
clk => bit_count[6].CLK
clk => bit_count[7].CLK
clk => adc_data[0]~reg0.CLK
clk => adc_data[1]~reg0.CLK
clk => adc_data[2]~reg0.CLK
clk => adc_data[3]~reg0.CLK
clk => adc_data[4]~reg0.CLK
clk => adc_data[5]~reg0.CLK
clk => adc_data[6]~reg0.CLK
clk => adc_data[7]~reg0.CLK
clk => adc_done~reg0.CLK
clk => adc_clk~reg0.CLK
clk => adc_cs~reg0.CLK
clk => adc_clk_int.CLK
clk => clk_div_count[0].CLK
clk => clk_div_count[1].CLK
clk => clk_div_count[2].CLK
clk => clk_div_count[3].CLK
clk => clk_div_count[4].CLK
clk => state~5.DATAIN
rst_n => clk_count[0].ACLR
rst_n => clk_count[1].ACLR
rst_n => clk_count[2].ACLR
rst_n => clk_count[3].ACLR
rst_n => clk_count[4].ACLR
rst_n => clk_count[5].ACLR
rst_n => clk_count[6].ACLR
rst_n => clk_count[7].ACLR
rst_n => clk_count[8].ACLR
rst_n => clk_count[9].ACLR
rst_n => clk_count[10].ACLR
rst_n => clk_count[11].ACLR
rst_n => clk_count[12].ACLR
rst_n => clk_count[13].ACLR
rst_n => clk_count[14].ACLR
rst_n => clk_count[15].ACLR
rst_n => data_temp[0].ACLR
rst_n => data_temp[1].ACLR
rst_n => data_temp[2].ACLR
rst_n => data_temp[3].ACLR
rst_n => data_temp[4].ACLR
rst_n => data_temp[5].ACLR
rst_n => data_temp[6].ACLR
rst_n => data_temp[7].ACLR
rst_n => bit_count[0].ACLR
rst_n => bit_count[1].ACLR
rst_n => bit_count[2].ACLR
rst_n => bit_count[3].ACLR
rst_n => bit_count[4].ACLR
rst_n => bit_count[5].ACLR
rst_n => bit_count[6].ACLR
rst_n => bit_count[7].ACLR
rst_n => adc_data[0]~reg0.ACLR
rst_n => adc_data[1]~reg0.ACLR
rst_n => adc_data[2]~reg0.ACLR
rst_n => adc_data[3]~reg0.ACLR
rst_n => adc_data[4]~reg0.ACLR
rst_n => adc_data[5]~reg0.ACLR
rst_n => adc_data[6]~reg0.ACLR
rst_n => adc_data[7]~reg0.ACLR
rst_n => adc_done~reg0.ACLR
rst_n => adc_clk~reg0.ACLR
rst_n => adc_cs~reg0.PRESET
rst_n => adc_clk_int.ACLR
rst_n => clk_div_count[0].ACLR
rst_n => clk_div_count[1].ACLR
rst_n => clk_div_count[2].ACLR
rst_n => clk_div_count[3].ACLR
rst_n => clk_div_count[4].ACLR
rst_n => state~7.DATAIN
adc_cs <= adc_cs~reg0.DB_MAX_OUTPUT_PORT_TYPE
adc_clk <= adc_clk~reg0.DB_MAX_OUTPUT_PORT_TYPE
adc_dat => data_temp.DATAB
adc_done <= adc_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
adc_data[0] <= adc_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
adc_data[1] <= adc_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
adc_data[2] <= adc_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
adc_data[3] <= adc_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
adc_data[4] <= adc_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
adc_data[5] <= adc_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
adc_data[6] <= adc_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
adc_data[7] <= adc_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|ballplayer_top|rpr0521rs_driver:sensor_inst
clk => clk.IN1
rst_n => rst_n.IN1
enable => next_state.OUTPUTSELECT
enable => next_state.OUTPUTSELECT
enable => next_state.OUTPUTSELECT
enable => next_state.OUTPUTSELECT
enable => next_state.OUTPUTSELECT
enable => next_state.OUTPUTSELECT
enable => next_state.OUTPUTSELECT
enable => next_state.OUTPUTSELECT
enable => next_state.OUTPUTSELECT
enable => next_state.OUTPUTSELECT
enable => next_state.OUTPUTSELECT
enable => next_state.OUTPUTSELECT
enable => next_state.OUTPUTSELECT
enable => next_state.OUTPUTSELECT
enable => next_state.OUTPUTSELECT
enable => next_state.OUTPUTSELECT
enable => next_state.OUTPUTSELECT
enable => next_state.OUTPUTSELECT
sda <> i2c_master:i2c_master_inst.sda
scl <= i2c_master:i2c_master_inst.scl
proximity_data[0] <= proximity_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
proximity_data[1] <= proximity_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
proximity_data[2] <= proximity_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
proximity_data[3] <= proximity_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
proximity_data[4] <= proximity_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
proximity_data[5] <= proximity_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
proximity_data[6] <= proximity_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
proximity_data[7] <= proximity_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
proximity_data[8] <= proximity_data[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
proximity_data[9] <= proximity_data[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
proximity_data[10] <= proximity_data[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
proximity_data[11] <= proximity_data[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
proximity_data[12] <= proximity_data[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
proximity_data[13] <= proximity_data[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
proximity_data[14] <= proximity_data[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
proximity_data[15] <= proximity_data[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ambient_light_data[0] <= ambient_light_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ambient_light_data[1] <= ambient_light_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ambient_light_data[2] <= ambient_light_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ambient_light_data[3] <= ambient_light_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ambient_light_data[4] <= ambient_light_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ambient_light_data[5] <= ambient_light_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ambient_light_data[6] <= ambient_light_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ambient_light_data[7] <= ambient_light_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ambient_light_data[8] <= ambient_light_data[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ambient_light_data[9] <= ambient_light_data[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ambient_light_data[10] <= ambient_light_data[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ambient_light_data[11] <= ambient_light_data[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ambient_light_data[12] <= ambient_light_data[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ambient_light_data[13] <= ambient_light_data[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ambient_light_data[14] <= ambient_light_data[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ambient_light_data[15] <= ambient_light_data[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_ready <= data_ready~reg0.DB_MAX_OUTPUT_PORT_TYPE
sensor_error <= sensor_error~reg0.DB_MAX_OUTPUT_PORT_TYPE


|ballplayer_top|rpr0521rs_driver:sensor_inst|i2c_master:i2c_master_inst
clk => bit_count[0].CLK
clk => bit_count[1].CLK
clk => bit_count[2].CLK
clk => bit_count[3].CLK
clk => sda_oe.CLK
clk => sda_out.CLK
clk => scl~reg0.CLK
clk => error~reg0.CLK
clk => done~reg0.CLK
clk => busy~reg0.CLK
clk => i2c_state~6.DATAIN
rst_n => sda_oe.ACLR
rst_n => sda_out.PRESET
rst_n => scl~reg0.PRESET
rst_n => error~reg0.ACLR
rst_n => done~reg0.ACLR
rst_n => busy~reg0.ACLR
rst_n => i2c_state~8.DATAIN
rst_n => bit_count[0].ENA
rst_n => bit_count[3].ENA
rst_n => bit_count[2].ENA
rst_n => bit_count[1].ENA
start => i2c_state.OUTPUTSELECT
start => i2c_state.OUTPUTSELECT
start => i2c_state.OUTPUTSELECT
start => i2c_state.OUTPUTSELECT
start => i2c_state.OUTPUTSELECT
start => busy~reg0.DATAIN
stop => ~NO_FANOUT~
write => ~NO_FANOUT~
read => ~NO_FANOUT~
device_addr[0] => ~NO_FANOUT~
device_addr[1] => ~NO_FANOUT~
device_addr[2] => ~NO_FANOUT~
device_addr[3] => ~NO_FANOUT~
device_addr[4] => ~NO_FANOUT~
device_addr[5] => ~NO_FANOUT~
device_addr[6] => ~NO_FANOUT~
reg_addr[0] => ~NO_FANOUT~
reg_addr[1] => ~NO_FANOUT~
reg_addr[2] => ~NO_FANOUT~
reg_addr[3] => ~NO_FANOUT~
reg_addr[4] => ~NO_FANOUT~
reg_addr[5] => ~NO_FANOUT~
reg_addr[6] => ~NO_FANOUT~
reg_addr[7] => ~NO_FANOUT~
data_out[0] => ~NO_FANOUT~
data_out[1] => ~NO_FANOUT~
data_out[2] => ~NO_FANOUT~
data_out[3] => ~NO_FANOUT~
data_out[4] => ~NO_FANOUT~
data_out[5] => ~NO_FANOUT~
data_out[6] => ~NO_FANOUT~
data_out[7] => ~NO_FANOUT~
data_in[0] <= <GND>
data_in[1] <= <GND>
data_in[2] <= <GND>
data_in[3] <= <GND>
data_in[4] <= <GND>
data_in[5] <= <GND>
data_in[6] <= <GND>
data_in[7] <= <GND>
busy <= busy~reg0.DB_MAX_OUTPUT_PORT_TYPE
done <= done~reg0.DB_MAX_OUTPUT_PORT_TYPE
error <= error~reg0.DB_MAX_OUTPUT_PORT_TYPE
sda <> sda
scl <= scl~reg0.DB_MAX_OUTPUT_PORT_TYPE


|ballplayer_top|hand_control:hand_ctrl_inst
dat_valid => hand_velocity[0]~reg0.CLK
dat_valid => hand_velocity[1]~reg0.CLK
dat_valid => hand_velocity[2]~reg0.CLK
dat_valid => hand_velocity[3]~reg0.CLK
dat_valid => hand_velocity[4]~reg0.CLK
dat_valid => hand_velocity[5]~reg0.CLK
dat_valid => hand_velocity[6]~reg0.CLK
dat_valid => hand_velocity[7]~reg0.CLK
dat_valid => velocity_temp[0].CLK
dat_valid => velocity_temp[1].CLK
dat_valid => velocity_temp[2].CLK
dat_valid => velocity_temp[3].CLK
dat_valid => velocity_temp[4].CLK
dat_valid => velocity_temp[5].CLK
dat_valid => velocity_temp[6].CLK
dat_valid => velocity_temp[7].CLK
dat_valid => velocity_temp[8].CLK
dat_valid => handline_pre[0].CLK
dat_valid => handline_pre[1].CLK
dat_valid => handline_pre[2].CLK
dat_valid => handline_pre[3].CLK
dat_valid => handline_pre[4].CLK
dat_valid => handline_pre[5].CLK
dat_valid => handline_pre[6].CLK
dat_valid => handline_pre[7].CLK
dat_valid => handline_pre[8].CLK
dat_valid => handline[0]~reg0.CLK
dat_valid => handline[1]~reg0.CLK
dat_valid => handline[2]~reg0.CLK
dat_valid => handline[3]~reg0.CLK
dat_valid => handline[4]~reg0.CLK
dat_valid => handline[5]~reg0.CLK
dat_valid => handline[6]~reg0.CLK
dat_valid => handline[7]~reg0.CLK
dat_valid => handline[8]~reg0.CLK
dat_valid => temp_mult[0].CLK
dat_valid => temp_mult[1].CLK
dat_valid => temp_mult[2].CLK
dat_valid => temp_mult[3].CLK
dat_valid => temp_mult[4].CLK
dat_valid => temp_mult[5].CLK
dat_valid => temp_mult[6].CLK
dat_valid => temp_mult[7].CLK
dat_valid => temp_mult[8].CLK
dat_valid => count.CLK
dat_valid => prox_dat2[6].CLK
dat_valid => prox_dat2[7].CLK
dat_valid => prox_dat2[8].CLK
dat_valid => prox_dat2[9].CLK
dat_valid => prox_dat2[10].CLK
dat_valid => prox_dat2[11].CLK
dat_valid => prox_dat1[0].CLK
dat_valid => prox_dat1[1].CLK
dat_valid => prox_dat1[2].CLK
dat_valid => prox_dat1[3].CLK
dat_valid => prox_dat1[4].CLK
dat_valid => prox_dat1[5].CLK
dat_valid => prox_dat1[6].CLK
dat_valid => prox_dat1[7].CLK
dat_valid => prox_dat1[8].CLK
dat_valid => prox_dat1[9].CLK
dat_valid => prox_dat1[10].CLK
dat_valid => prox_dat1[11].CLK
dat_valid => prox_dat1[12].CLK
dat_valid => prox_dat1[13].CLK
dat_valid => prox_dat1[14].CLK
dat_valid => prox_dat1[15].CLK
dat_valid => prox_dat0[0].CLK
dat_valid => prox_dat0[1].CLK
dat_valid => prox_dat0[2].CLK
dat_valid => prox_dat0[3].CLK
dat_valid => prox_dat0[4].CLK
dat_valid => prox_dat0[5].CLK
dat_valid => prox_dat0[6].CLK
dat_valid => prox_dat0[7].CLK
dat_valid => prox_dat0[8].CLK
dat_valid => prox_dat0[9].CLK
dat_valid => prox_dat0[10].CLK
dat_valid => prox_dat0[11].CLK
dat_valid => prox_dat0[12].CLK
dat_valid => prox_dat0[13].CLK
dat_valid => prox_dat0[14].CLK
dat_valid => prox_dat0[15].CLK
prox_dat[0] => prox_dat0[0].DATAIN
prox_dat[1] => prox_dat0[1].DATAIN
prox_dat[2] => prox_dat0[2].DATAIN
prox_dat[3] => prox_dat0[3].DATAIN
prox_dat[4] => prox_dat0[4].DATAIN
prox_dat[5] => prox_dat0[5].DATAIN
prox_dat[6] => prox_dat0[6].DATAIN
prox_dat[7] => prox_dat0[7].DATAIN
prox_dat[8] => prox_dat0[8].DATAIN
prox_dat[9] => prox_dat0[9].DATAIN
prox_dat[10] => prox_dat0[10].DATAIN
prox_dat[11] => prox_dat0[11].DATAIN
prox_dat[12] => prox_dat0[12].DATAIN
prox_dat[13] => prox_dat0[13].DATAIN
prox_dat[14] => prox_dat0[14].DATAIN
prox_dat[15] => prox_dat0[15].DATAIN
handline[0] <= handline[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
handline[1] <= handline[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
handline[2] <= handline[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
handline[3] <= handline[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
handline[4] <= handline[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
handline[5] <= handline[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
handline[6] <= handline[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
handline[7] <= handline[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
handline[8] <= handline[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hand_velocity[0] <= hand_velocity[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hand_velocity[1] <= hand_velocity[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hand_velocity[2] <= hand_velocity[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hand_velocity[3] <= hand_velocity[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hand_velocity[4] <= hand_velocity[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hand_velocity[5] <= hand_velocity[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hand_velocity[6] <= hand_velocity[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hand_velocity[7] <= hand_velocity[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|ballplayer_top|adjuster:adj_inst
clk => clk.IN3
rst_n => rst_n.IN3
key_up => key_up.IN1
key_down => key_down.IN1
k[0] <= k[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
k[1] <= k[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_led_1[0] <= segment_display:seg_inst.seg
seg_led_1[1] <= segment_display:seg_inst.seg
seg_led_1[2] <= segment_display:seg_inst.seg
seg_led_1[3] <= segment_display:seg_inst.seg
seg_led_1[4] <= segment_display:seg_inst.seg
seg_led_1[5] <= segment_display:seg_inst.seg
seg_led_1[6] <= segment_display:seg_inst.seg
seg_led_1[7] <= segment_display:seg_inst.seg
seg_led_1[8] <= segment_display:seg_inst.seg
seg_led_2[0] <= segment_display:seg_inst.dig
seg_led_2[1] <= segment_display:seg_inst.dig
seg_led_2[2] <= segment_display:seg_inst.dig
seg_led_2[3] <= segment_display:seg_inst.dig
seg_led_2[4] <= segment_display:seg_inst.dig
seg_led_2[5] <= segment_display:seg_inst.dig
seg_led_2[6] <= segment_display:seg_inst.dig
seg_led_2[7] <= segment_display:seg_inst.dig
seg_led_2[8] <= segment_display:seg_inst.dig


|ballplayer_top|adjuster:adj_inst|debounce:deb_up_inst
clk => button_out~reg0.CLK
clk => button_state.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
clk => counter[16].CLK
clk => counter[17].CLK
clk => counter[18].CLK
clk => counter[19].CLK
clk => button_sync2.CLK
clk => button_sync1.CLK
rst_n => button_out~reg0.ACLR
rst_n => button_state.ACLR
rst_n => counter[0].ACLR
rst_n => counter[1].ACLR
rst_n => counter[2].ACLR
rst_n => counter[3].ACLR
rst_n => counter[4].ACLR
rst_n => counter[5].ACLR
rst_n => counter[6].ACLR
rst_n => counter[7].ACLR
rst_n => counter[8].ACLR
rst_n => counter[9].ACLR
rst_n => counter[10].ACLR
rst_n => counter[11].ACLR
rst_n => counter[12].ACLR
rst_n => counter[13].ACLR
rst_n => counter[14].ACLR
rst_n => counter[15].ACLR
rst_n => counter[16].ACLR
rst_n => counter[17].ACLR
rst_n => counter[18].ACLR
rst_n => counter[19].ACLR
rst_n => button_sync2.ACLR
rst_n => button_sync1.ACLR
button_in => button_sync1.DATAIN
button_out <= button_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|ballplayer_top|adjuster:adj_inst|debounce:deb_down_inst
clk => button_out~reg0.CLK
clk => button_state.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
clk => counter[16].CLK
clk => counter[17].CLK
clk => counter[18].CLK
clk => counter[19].CLK
clk => button_sync2.CLK
clk => button_sync1.CLK
rst_n => button_out~reg0.ACLR
rst_n => button_state.ACLR
rst_n => counter[0].ACLR
rst_n => counter[1].ACLR
rst_n => counter[2].ACLR
rst_n => counter[3].ACLR
rst_n => counter[4].ACLR
rst_n => counter[5].ACLR
rst_n => counter[6].ACLR
rst_n => counter[7].ACLR
rst_n => counter[8].ACLR
rst_n => counter[9].ACLR
rst_n => counter[10].ACLR
rst_n => counter[11].ACLR
rst_n => counter[12].ACLR
rst_n => counter[13].ACLR
rst_n => counter[14].ACLR
rst_n => counter[15].ACLR
rst_n => counter[16].ACLR
rst_n => counter[17].ACLR
rst_n => counter[18].ACLR
rst_n => counter[19].ACLR
rst_n => button_sync2.ACLR
rst_n => button_sync1.ACLR
button_in => button_sync1.DATAIN
button_out <= button_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|ballplayer_top|adjuster:adj_inst|segment_display:seg_inst
clk => digit_select.CLK
clk => refresh_counter[0].CLK
clk => refresh_counter[1].CLK
clk => refresh_counter[2].CLK
clk => refresh_counter[3].CLK
clk => refresh_counter[4].CLK
clk => refresh_counter[5].CLK
clk => refresh_counter[6].CLK
clk => refresh_counter[7].CLK
clk => refresh_counter[8].CLK
clk => refresh_counter[9].CLK
clk => refresh_counter[10].CLK
clk => refresh_counter[11].CLK
clk => refresh_counter[12].CLK
clk => refresh_counter[13].CLK
clk => refresh_counter[14].CLK
clk => refresh_counter[15].CLK
rst_n => digit_select.ACLR
rst_n => refresh_counter[0].ACLR
rst_n => refresh_counter[1].ACLR
rst_n => refresh_counter[2].ACLR
rst_n => refresh_counter[3].ACLR
rst_n => refresh_counter[4].ACLR
rst_n => refresh_counter[5].ACLR
rst_n => refresh_counter[6].ACLR
rst_n => refresh_counter[7].ACLR
rst_n => refresh_counter[8].ACLR
rst_n => refresh_counter[9].ACLR
rst_n => refresh_counter[10].ACLR
rst_n => refresh_counter[11].ACLR
rst_n => refresh_counter[12].ACLR
rst_n => refresh_counter[13].ACLR
rst_n => refresh_counter[14].ACLR
rst_n => refresh_counter[15].ACLR
display_value[0] => Div0.IN11
display_value[0] => Mod0.IN11
display_value[1] => Div0.IN10
display_value[1] => Mod0.IN10
display_value[2] => Div0.IN9
display_value[2] => Mod0.IN9
display_value[3] => Div0.IN8
display_value[3] => Mod0.IN8
display_value[4] => Div0.IN7
display_value[4] => Mod0.IN7
display_value[5] => Div0.IN6
display_value[5] => Mod0.IN6
display_value[6] => Div0.IN5
display_value[6] => Mod0.IN5
display_value[7] => Div0.IN4
display_value[7] => Mod0.IN4
seg[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
dig[0] <= digit_select.DB_MAX_OUTPUT_PORT_TYPE
dig[1] <= digit_select.DB_MAX_OUTPUT_PORT_TYPE


|ballplayer_top|jumping:jump_inst
clk => clk.IN1
rst_n => rst_n.IN1
pic_y[0] <= pic_y[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pic_y[1] <= pic_y[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pic_y[2] <= pic_y[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pic_y[3] <= pic_y[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pic_y[4] <= pic_y[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pic_y[5] <= pic_y[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pic_y[6] <= pic_y[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pic_y[7] <= pic_y[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pic_y[8] <= pic_y[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
handline[0] => LessThan6.IN18
handline[0] => init_position.DATAB
handline[1] => LessThan6.IN17
handline[1] => init_position.DATAB
handline[2] => LessThan6.IN16
handline[2] => init_position.DATAB
handline[3] => LessThan6.IN15
handline[3] => init_position.DATAB
handline[4] => LessThan6.IN14
handline[4] => init_position.DATAB
handline[5] => LessThan6.IN13
handline[5] => init_position.DATAB
handline[6] => LessThan6.IN12
handline[6] => init_position.DATAB
handline[7] => LessThan6.IN11
handline[7] => init_position.DATAB
handline[8] => LessThan6.IN10
handline[8] => init_position.DATAB
hand_velocity[0] => ~NO_FANOUT~
hand_velocity[1] => init_velocity.DATAB
hand_velocity[2] => init_velocity.DATAB
hand_velocity[3] => init_velocity.DATAB
hand_velocity[4] => init_velocity.DATAB
hand_velocity[5] => init_velocity.DATAB
hand_velocity[6] => init_velocity.DATAB
hand_velocity[7] => init_velocity.DATAB
k[0] => Mult2.IN17
k[0] => Mult3.IN17
k[1] => Mult2.IN16
k[1] => Mult3.IN16
ball_release_button => reset.IN0
home[0] => pic_y[0]~reg0.ADATA
home[0] => init_position[0].ADATA
home[1] => pic_y[1]~reg0.ADATA
home[1] => init_position[1].ADATA
home[2] => pic_y[2]~reg0.ADATA
home[2] => init_position[2].ADATA
home[3] => pic_y[3]~reg0.ADATA
home[3] => init_position[3].ADATA
home[4] => pic_y[4]~reg0.ADATA
home[4] => init_position[4].ADATA
home[5] => pic_y[5]~reg0.ADATA
home[5] => init_position[5].ADATA
home[6] => pic_y[6]~reg0.ADATA
home[6] => init_position[6].ADATA
home[7] => pic_y[7]~reg0.ADATA
home[7] => init_position[7].ADATA
home[8] => pic_y[8]~reg0.ADATA
home[8] => init_position[8].ADATA
beep_flag[0] <= beep_flag[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
beep_flag[1] <= beep_flag[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
stop_flag <= stop_flag~reg0.DB_MAX_OUTPUT_PORT_TYPE
over_flag <= over_flag~reg0.DB_MAX_OUTPUT_PORT_TYPE


|ballplayer_top|jumping:jump_inst|frequency_divider:fre_500us
clk => clk_out~reg0.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
clk => counter[16].CLK
clk => counter[17].CLK
clk => counter[18].CLK
clk => counter[19].CLK
clk => counter[20].CLK
clk => counter[21].CLK
clk => counter[22].CLK
clk => counter[23].CLK
rst_n => clk_out~reg0.ACLR
rst_n => counter[0].ACLR
rst_n => counter[1].ACLR
rst_n => counter[2].ACLR
rst_n => counter[3].ACLR
rst_n => counter[4].ACLR
rst_n => counter[5].ACLR
rst_n => counter[6].ACLR
rst_n => counter[7].ACLR
rst_n => counter[8].ACLR
rst_n => counter[9].ACLR
rst_n => counter[10].ACLR
rst_n => counter[11].ACLR
rst_n => counter[12].ACLR
rst_n => counter[13].ACLR
rst_n => counter[14].ACLR
rst_n => counter[15].ACLR
rst_n => counter[16].ACLR
rst_n => counter[17].ACLR
rst_n => counter[18].ACLR
rst_n => counter[19].ACLR
rst_n => counter[20].ACLR
rst_n => counter[21].ACLR
rst_n => counter[22].ACLR
rst_n => counter[23].ACLR
clk_out <= clk_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|ballplayer_top|lcd_full_init_test:lcd_test_inst
clk_50mhz => clk_50mhz.IN1
rst_n => rst_n.IN1
lcd_rst <= lcd_rst_reg.DB_MAX_OUTPUT_PORT_TYPE
lcd_blk <= <VCC>
lcd_dc <= lcd_write:lcd_write_inst.dc
lcd_sclk <= lcd_write:lcd_write_inst.sclk
lcd_mosi <= lcd_write:lcd_write_inst.mosi
lcd_cs <= lcd_write:lcd_write_inst.cs
led1 <= led1.DB_MAX_OUTPUT_PORT_TYPE
led2 <= led2.DB_MAX_OUTPUT_PORT_TYPE


|ballplayer_top|lcd_full_init_test:lcd_test_inst|lcd_write:lcd_write_inst
sys_clk_50MHz => wr_done~reg0.CLK
sys_clk_50MHz => mosi~reg0.CLK
sys_clk_50MHz => sclk~reg0.CLK
sys_clk_50MHz => state2_finish_flag.CLK
sys_clk_50MHz => sclk_flag.CLK
sys_clk_50MHz => cnt_sclk[0].CLK
sys_clk_50MHz => cnt_sclk[1].CLK
sys_clk_50MHz => cnt_sclk[2].CLK
sys_clk_50MHz => cnt_sclk[3].CLK
sys_clk_50MHz => cnt1[0].CLK
sys_clk_50MHz => cnt1[1].CLK
sys_clk_50MHz => cnt1[2].CLK
sys_clk_50MHz => cnt1[3].CLK
sys_clk_50MHz => cnt_delay[0].CLK
sys_clk_50MHz => cnt_delay[1].CLK
sys_clk_50MHz => cnt_delay[2].CLK
sys_clk_50MHz => cnt_delay[3].CLK
sys_clk_50MHz => cnt_delay[4].CLK
sys_clk_50MHz => state~2.DATAIN
sys_rst_n => wr_done~reg0.ACLR
sys_rst_n => sclk~reg0.ACLR
sys_rst_n => mosi~reg0.ACLR
sys_rst_n => cnt_delay[0].ACLR
sys_rst_n => cnt_delay[1].ACLR
sys_rst_n => cnt_delay[2].ACLR
sys_rst_n => cnt_delay[3].ACLR
sys_rst_n => cnt_delay[4].ACLR
sys_rst_n => cnt1[0].ACLR
sys_rst_n => cnt1[1].ACLR
sys_rst_n => cnt1[2].ACLR
sys_rst_n => cnt1[3].ACLR
sys_rst_n => cnt_sclk[0].ACLR
sys_rst_n => cnt_sclk[1].ACLR
sys_rst_n => cnt_sclk[2].ACLR
sys_rst_n => cnt_sclk[3].ACLR
sys_rst_n => sclk_flag.ACLR
sys_rst_n => state2_finish_flag.ACLR
sys_rst_n => state~4.DATAIN
data[0] => Mux0.IN7
data[1] => Mux0.IN6
data[2] => Mux0.IN5
data[3] => Mux0.IN4
data[4] => Mux0.IN3
data[5] => Mux0.IN2
data[6] => Mux0.IN1
data[7] => mosi.DATAB
data[8] => dc.DATAIN
en_write => Selector1.IN3
en_write => Selector0.IN2
wr_done <= wr_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
cs <= cs.DB_MAX_OUTPUT_PORT_TYPE
dc <= data[8].DB_MAX_OUTPUT_PORT_TYPE
sclk <= sclk~reg0.DB_MAX_OUTPUT_PORT_TYPE
mosi <= mosi~reg0.DB_MAX_OUTPUT_PORT_TYPE


